name: Backend CI

on:
  push:
    paths:
      - 'crm_backend/**'
  pull_request:
    paths:
      - 'crm_backend/**'

env:
  SPRING_PROFILES_ACTIVE: test

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      # Redis service
      redis:
        image: redis:7
        ports:
          - 6379:6379
      # PostgreSQL service - use this instead of Testcontainers for CI
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Make Gradlew Executable
        run: chmod +x ./crm_backend/gradlew

      - name: Set working directory
        run: echo "WORKING_DIR=crm_backend" >> $GITHUB_ENV

      - name: Build and test
        working-directory: ${{ env.WORKING_DIR }}
        run: ./gradlew clean test
        env:
          # Disable Testcontainers and use the PostgreSQL service directly
          TESTCONTAINERS_RYUK_DISABLED: true
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres
          SPRING_PROFILES_ACTIVE: test
          SPRING_REDIS_HOST: localhost
          SPRING_REDIS_PORT: 6379

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: crm_backend/build/reports/**/*